@import '../../assets/scss/variables';
@import '../../assets/scss/functions';
@import '../../assets/scss/mixins';
@import '../../assets/scss/animations';

.options {
  text-align: center;
  margin: 0 auto;
}

.control {
  background: $control-default-bg;
  border-radius: $control-border-radius;
  border-width: $control-border-width;
  border-style: solid;
  font-family: inherit;
  font-size: $control-font-size;
  font-weight: $control-font-weight;
  height: $control-height;
  margin: $control-margin;
  outline: none;
  padding-left: $control-padding;
  padding-right: $control-padding;
  transition: all .3s ease-in-out;

  &:hover {
    cursor: pointer;
  }

  &[disabled] {
    opacity: 0.5;
  }
}

.control[disabled] {
  cursor: not-allowed;
}

.button--primary {
  background: $btn-primary-color;
  border-color: $btn-primary-color;
  color: $white;

  &:hover,
  &:active {
    &:not([disabled]) {
      background: $btn-primary-hover-bg;
      border-color: $btn-primary-hover-color;
      color: $btn-primary-hover-color;
    }
  }
}

.button--default,
.dropdown {
  border-color: $control-default-color;
  color: $control-default-color;

  &:hover,
  &:active {
    &:not([disabled]) {
      background: $control-default-color;
      color: $control-hover-color;
    }
  }

  option {
    background: $control-hover-color;
    color: $text-primary-color;
  }
}

.puzzle {
  height: $peg-height + $peg-base-height;
  margin-bottom: $peg-base-height * 2;
  margin-top: $peg-base-height * 2;
}

.tower {
  bottom: 0;
  display: inline-block;
  height: $peg-height;
  position: relative;
  width: $tower-width;
}

.peg {
  @include rounded-borders($peg-border-radius, (top-left, top-right));

  background: $peg-color;
  bottom: 0;
  box-shadow: $default-box-shadow;
  display: inline-block;
  left: 0;
  margin: 0 auto;
  right:0;
  top: 0;
  position: absolute;
  width: $peg-width;
}

.peg-base {
  @include rounded-borders($peg-base-border-radius);

  background: $peg-base-color;
  bottom: 0;
  box-shadow: $default-box-shadow-bottom;
  height: $peg-base-height;
  left: 0;
  position: absolute;
  right:0;
  z-index: 200;
}

.stack {
  bottom: 0;
  display: inline-block;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 100;
}

.disk-group {
  bottom: 0;
  left: 0;
  list-style-type: none;
  margin: 0 auto;
  padding: 0;
  position: absolute;
  right: 0;
}

.disk {
  animation-fill-mode: forwards;
  animation-timing-function: linear;
  border-radius: $disk-border-radius;
  box-shadow: $default-box-shadow;
  height: $disk-height;
  margin: 0 auto;
  position: relative;
}

@for $i from 1 through $max-disks {
  .disk--#{$i} {
    background: nth($disk-colors, $i);
    width: calculate-disk-width($i);
  }
}
